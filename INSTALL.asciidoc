[[install]]
= Install
:toc:
:toc-placement!:

Installing Prerequisites and building QC-Ocaml

toc::[]

== Installing Ocaml

We use `opam` to set up the ocaml environment.  Currently we're based
on ocaml version 4.07.1.

How to set up your environment for this tool:

for Ubuntu:
....
sudo apt-get install opam
....

for OSX:
....
brew install gtk+3
brew install gpatch
brew install opam
....

for Ubuntu or OSX:
....
export VERSION=4.07.1

export OPAMROOT=$HOME/Hack/Ocaml/$VERSION

mkdir -p $OPAMROOT

echo "export OPAMROOT=$OPAMROOT" >> $OPAMROOT/dot.bashrc

opam init --dot-profile=$OPAMROOT/dot.bashrc \
    -j 32 \
    --yes \
    --bare \
    --inplace-build \
    --enable-completion \
    --enable-shell-hook \
    --shell-setup

eval $(opam env)

....

And to set up the environment in a shell for each of these installs,
just source the dot.bashrc in $OPAMROOT/dot.bashrc

== Installing Prerequisite Modules

We need a bumch of prerequisite modules, and opam can install all of
them, *except* for `ocamldot`.  For this one, you'll need to `git
clone` it and build it yourself.  But it depends on a module that opam
can install, so it's a little more involved than that.

(1) first round of opam installs

....
opam install  lablgtk3 ocamlfind
....

(2) install ocamldot

....
git clone git@github.com:chetmurthy/ocamldot.git
(cd ocamldot && ./configure && make && make install)
....

(3) back to the opam installs

....
opam install camlp5 camlzip cmdliner conf-gnutls \
     ocamlfind lablgtk3 menhir oasis containers \
	 ocamlfind ocamlgraph ocamlnet ocurl ounit ppx_test \
	 pcre ssl ppx_deriving_yojson yojson ocaml-inifiles \
	 ppx_deriving_cmdliner
....

== Building QC-Ocaml

....
make everything
....

This will build a tool, `qctool` which allows to run commands against
the backend, as well as a library, `libqasm.cma` which contains the
library itself.  `make test` will run test-cases, and the file
`include_ml` contains commands that can be cut-and-paste-ed into the
ocaml toplevel.

